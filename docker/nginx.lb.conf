# Load Balancer Configuration for Blue-Green Deployment
# Nginx configuration for zero-downtime deployments

upstream backend_pool {
    # Blue-green backend switching
    # This configuration is dynamically updated during deployments
    server backend-blue:3002 weight=100 max_fails=3 fail_timeout=30s;
    # server backend-green:3002 weight=0 max_fails=3 fail_timeout=30s;
    
    # Health checks and load balancing
    least_conn;
    keepalive 32;
}

upstream frontend_pool {
    # Blue-green frontend switching  
    # This configuration is dynamically updated during deployments
    server frontend-blue:80 weight=100 max_fails=3 fail_timeout=30s;
    # server frontend-green:80 weight=0 max_fails=3 fail_timeout=30s;
    
    # Connection pooling
    keepalive 16;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=forms:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=general:10m rate=20r/s;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=addr:10m;

server {
    listen 80;
    listen [::]:80;
    server_name www.rebootmedia.net rebootmedia.net;
    
    # Security headers for HTTP
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.rebootmedia.net rebootmedia.net;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS and security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # CSP header for security
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.rebootmedia.net; frame-ancestors 'none';" always;
    
    # Connection and rate limiting
    limit_conn addr 100;
    limit_req zone=general burst=50 nodelay;
    
    # Logging
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # API routes (backend)
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        # Proxy to backend pool
        proxy_pass http://backend_pool;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Health check handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 10s;
        
        # Cache API responses appropriately
        location ~* /api/(health|ready|live|metrics)$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
    }
    
    # Form submission (special rate limiting)
    location /api/forms/ {
        limit_req zone=forms burst=10 nodelay;
        
        proxy_pass http://backend_pool;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Longer timeout for form processing
        proxy_read_timeout 120s;
        proxy_send_timeout 120s;
    }
    
    # Static assets with long-term caching
    location /assets/ {
        proxy_pass http://frontend_pool;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Long-term caching for hashed assets
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status "STATIC";
        
        # Compression for static assets
        gzip_static on;
    }
    
    # ServiceWorker removed - unnecessary overhead for marketing site
    
    # Robots and sitemap
    location ~ ^/(robots\.txt|sitemap\.xml)$ {
        proxy_pass http://frontend_pool;
        proxy_set_header Host $host;
        
        expires 1h;
        add_header Cache-Control "public";
    }
    
    # Health check endpoint for load balancer
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
    
    # Frontend application (default)
    location / {
        proxy_pass http://frontend_pool;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SPA fallback
        try_files $uri $uri/ @fallback;
        
        # Caching for HTML
        expires 5m;
        add_header Cache-Control "public, must-revalidate";
    }
    
    # SPA fallback for client-side routing
    location @fallback {
        proxy_pass http://frontend_pool;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Security: Block common attack patterns
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ /\.(env|git|svn) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block common bot patterns
    if ($http_user_agent ~* (bot|spider|crawler|scraper)) {
        return 429;
    }
}

# HTTP/2 push optimization
http2_push_preload on;

# Additional security configurations
server_tokens off;
more_clear_headers Server;

# Custom error pages
error_page 404 /404.html;
error_page 500 502 503 504 /50x.html;

location = /404.html {
    internal;
    proxy_pass http://frontend_pool/404.html;
}

location = /50x.html {
    internal;
    proxy_pass http://frontend_pool/offline.html;
}